package com.sdase.malwarescanner.web.rest;


import com.sdase.malwarescanner.service.UserService;
import com.sdase.malwarescanner.web.model.UserModel;
import com.sdase.malwarescanner.web.model.UserRequestModel;
import com.sdase.malwarescanner.web.model.UserResponseModel;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;

import static com.sdase.malwarescanner.config.Constants.*;

@RestController
@RequestMapping(USER_REST_PATH)
public class UserRest {

    private UserService service;

    @Autowired
    public UserRest(UserService service) {
        this.service = service;
    }


    @GetMapping("/{code}")
    public ResponseEntity<UserResponseModel> getByCode(@PathVariable String code) {
        UserResponseModel response = service.getByCode(code);
        return ResponseEntity.status(response.getHttpStatus()).body(response);
    }

    @GetMapping(USER_REST_GET_PAGINATED_PATH)
    public ResponseEntity<UserResponseModel> getPaginated(UserRequestModel model) {
        UserResponseModel response = service.getPaginated(model);
        return ResponseEntity.status(response.getHttpStatus()).body(response);
    }

    @PostMapping
    public ResponseEntity<UserResponseModel> add(@RequestBody @Valid UserModel model) {
        UserResponseModel response = service.add(model);
        return ResponseEntity.status(response.getHttpStatus()).body(response);
    }

    @PutMapping
    public ResponseEntity<UserResponseModel> edit(@RequestBody @Valid UserModel model) {
        UserResponseModel response = service.edit(model);
        return ResponseEntity.status(response.getHttpStatus()).body(response);
    }

    @DeleteMapping("/{code}")
    public ResponseEntity<UserResponseModel> remove(@PathVariable String code) {
        UserResponseModel response = service.remove(code);
        return ResponseEntity.status(response.getHttpStatus()).body(response);
    }

}
