package com.sdase.malwarescanner.util;

import com.sdase.malwarescanner.exception.StorageException;
import org.springframework.web.multipart.MultipartFile;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.security.DigestInputStream;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class Checksum {

    public static String getChecksum(MultipartFile multipartFile)  {

        try {

            MessageDigest md = MessageDigest.getInstance("SHA-256");

            // file hashing with DigestInputStream
            DigestInputStream dis = new DigestInputStream(multipartFile.getInputStream(), md);
            while (dis.read() != -1) ; //empty loop to clear the data
            md = dis.getMessageDigest();


            // bytes to hex
            StringBuilder result = new StringBuilder();
            for (byte b : md.digest()) {
                result.append(String.format("%02x", b));
            }
            return result.toString();

        } catch (NoSuchAlgorithmException | IOException e) {
            throw new StorageException("Cannot store corrupted file.");
        }


    }
}
