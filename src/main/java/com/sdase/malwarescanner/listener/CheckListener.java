package com.sdase.malwarescanner.listener;

import com.sdase.malwarescanner.model.CheckResultEvent;
import com.sdase.malwarescanner.strategy.impl.CheckResultEventStrategyFactory;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Service;

import static com.sdase.malwarescanner.util.CheckTracker.addCount;

@Service
public class CheckListener {


    private CheckResultEventStrategyFactory strategyFactory;

    public CheckListener(CheckResultEventStrategyFactory strategyFactory) {
        this.strategyFactory = strategyFactory;
    }

    @KafkaListener(topics = "${kafka.check.event.consumer.topic}", groupId = "${kafka.group.id}", containerFactory = "checkResultEventKafkaListenerContainerFactory")
    public void consume(CheckResultEvent message) {

        addCount();

        switch (message.getState()){

            case OK:
                strategyFactory.
                        findStrategy(CheckResultEventStrategyFactory.StrategyName.OK_STRATEGY).
                        handle(message);
                break;

            case SUSPICIOUS:
                strategyFactory.
                        findStrategy(CheckResultEventStrategyFactory.StrategyName.SUSPICIOUS_STRATEGY).
                        handle(message);
                break;

            case ERROR:
                strategyFactory.
                        findStrategy(CheckResultEventStrategyFactory.StrategyName.ERROR_STRATEGY).
                        handle(message);
                break;

            case IGNORED:
                strategyFactory.
                        findStrategy(CheckResultEventStrategyFactory.StrategyName.IGNORED_STRATEGY).
                        handle(message);
                break;
        }
    }
}
