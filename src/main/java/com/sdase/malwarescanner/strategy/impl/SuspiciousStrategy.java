package com.sdase.malwarescanner.strategy.impl;

import com.sdase.malwarescanner.entity.Check;
import com.sdase.malwarescanner.entity.File;
import com.sdase.malwarescanner.model.CheckResultEvent;
import com.sdase.malwarescanner.model.ScanResult;
import com.sdase.malwarescanner.service.CheckService;
import com.sdase.malwarescanner.service.FileProducerService;
import com.sdase.malwarescanner.service.FileService;
import com.sdase.malwarescanner.strategy.CheckResultEventStrategy;
import org.springframework.stereotype.Component;

import static com.sdase.malwarescanner.util.UUIDUtil.extractCode;

@Component
public class SuspiciousStrategy implements CheckResultEventStrategy {

    protected CheckService checkService;

    protected FileService fileService;

    private FileProducerService fileProducerService;

    public SuspiciousStrategy(CheckService checkService, FileService fileService, FileProducerService fileProducerService) {
        this.checkService = checkService;
        this.fileService = fileService;
        this.fileProducerService = fileProducerService;
    }

    @Override
    public void handle(CheckResultEvent checkResultEvent) {

        File file = fileService.getByCode(extractCode(checkResultEvent.getDetails()));

        Check check = checkService.getByNameAndFile(checkResultEvent.getName(), file);

        updateCheck(check);
        updateFile(file);
        delete(file.getName());
        sendMessage(file);
    }

    @Override
    public void updateCheck(Check check) {
        check.setState(Check.State.SUSPICIOUS);
        checkService.addOrEdit(check);
    }

    @Override
    public void updateFile(File file) {
        file.setState(File.State.SUSPICIOUS);
        fileService.addOrEdit(file);
    }

    @Override
    public void sendMessage(File file) {
        ScanResult scanResult = new ScanResult().
                setResult(String.format("File: %s is suspicious.", file.getOriginalName())).
                setState(ScanResult.State.SUSPICIOUS).
                setUrl(fileService.getFileURLForConsuming(file.getName()));
        fileProducerService.produce(scanResult);
    }

    @Override
    public void delete(String name) {
        fileService.delete(name);
    }

    @Override
    public CheckResultEventStrategyFactory.StrategyName getStrategyName() {
        return CheckResultEventStrategyFactory.StrategyName.SUSPICIOUS_STRATEGY;
    }
}
